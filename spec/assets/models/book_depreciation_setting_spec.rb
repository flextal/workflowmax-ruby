=begin
#Xero Assets API

#This is the Xero Assets API

The version of the OpenAPI document: 2.1.3
Contact: api@xero.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for WorkflowMaxRuby::Assets::BookDepreciationSetting
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BookDepreciationSetting' do
  before do
    # run before each test
    @instance = WorkflowMaxRuby::Assets::BookDepreciationSetting.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BookDepreciationSetting' do
    it 'should create an instance of BookDepreciationSetting' do
      expect(@instance).to be_instance_of(WorkflowMaxRuby::Assets::BookDepreciationSetting)
    end
  end
  describe 'test attribute "depreciation_method"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["NoDepreciation", "StraightLine", "DiminishingValue100", "DiminishingValue150", "DiminishingValue200", "FullDepreciation"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.depreciation_method = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "averaging_method"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["FullMonth", "ActualDays"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.averaging_method = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "depreciation_rate"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "effective_life_years"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "depreciation_calculation_method"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Rate", "Life", "None"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.depreciation_calculation_method = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "depreciable_object_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "depreciable_object_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "book_effective_date_of_change_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
